struct CA {
#include<vector>
#define ll long long
	ll pi;
	ll n;
	ll qpow(ll a, ll b) {
		ll res = 1;
		while (b) {
			if (b & 1)res = res * a % pi;
			b >>= 1;
			a = a * a % pi;
		}
		return res;
	}
	vector<ll>f;
	CA(ll _n, ll _pi = 1e9 + 7) {
		pi = _pi;
		n = _n;
		f.resize(n + 5);
		f[0] = 1;
		for (ll q = 1; q <= n; ++q) {
			f[q] = f[q - 1] * q % pi;
		}
	}
	ll c(ll a, ll b) {
		return f[a] * qpow(f[b], pi - 2) % pi * qpow(f[a - b], pi - 2) % pi;
	}
	ll a(ll a, ll b) {
		return c(a, b) * f[b] % pi;
	}
};