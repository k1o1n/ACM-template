先确定每个字符的哈希对应，以26个小写字符为例：
a~z分别对应1~26

再确定进制base

假设存在字符串ans

可知若F[pos]表示字符串ans的前pos位构成的字符串的哈希值，f(pos)表示第pos位的字符的哈希值，则存在以下转化：
F[pos+1]=F[pos]*base+f(pos+1)

若g[l,r]表示字符串ans第l位到第r位所组成的子串的哈希值，则存在如下转化：
g[l,r]=F[r]-F[l-1]*base^(r-l+1)

当字符串位数很大时极有可能溢出，故需要引入模运算，故上述公式可变形：
F[pos+1]=(F[pos]*base+f(pos+1))%pi
g[l,r]=((F[r]-F[l-1]*base^(r-l+1))%pi+pi)%pi
pi为一个极大的素数
当引入模运算后，不同的字符串的哈希值也有可能存在相同的情况，为了降低这种可能性，可以使用双哈希。
即使用两组base、pi值进行哈希运算。
但引入该模运算后哈希值不能直接用来比较大小，只能判断是否相等，可以结合二分进行字符串判断

